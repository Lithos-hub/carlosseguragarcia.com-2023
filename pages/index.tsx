import { useEffect, useRef } from "react";
import Head from "next/head";

import { DefaultLayout } from "../layout";
import {
  About,
  Experience,
  Header,
  Hero,
  Projects,
  Skills,
} from "@/components";
import { useIntersectionObserver } from "@/hooks/useIsVisible";
import { useRouter } from "next/router";
import Jumper from "@/components/Jumper/Jumper";
import Image from "next/image";
import { motion } from "framer-motion";

export default function Home() {
  const router = useRouter();

  const heroRef = useRef<HTMLDivElement>(null);
  const aboutRef = useRef<HTMLDivElement>(null);
  const experienceRef = useRef<HTMLDivElement>(null);
  const skillsRef = useRef<HTMLDivElement>(null);
  const projectsRef = useRef<HTMLDivElement>(null);

  const heroIsVisible = useIntersectionObserver({ threshold: 1 }, heroRef);
  const aboutIsVisible = useIntersectionObserver({ threshold: 1 }, aboutRef);
  const experienceIsVisible = useIntersectionObserver(
    { threshold: 1 },
    experienceRef
  );
  const skillsIsVisible = useIntersectionObserver({ threshold: 1 }, skillsRef);
  const projectsIsVisible = useIntersectionObserver(
    { threshold: 1 },
    projectsRef
  );

  useEffect(() => {
    if (typeof window !== "undefined") {
      if (heroIsVisible) document.location.href = "#hero";
      if (aboutIsVisible) document.location.href = "#about";
      if (experienceIsVisible) document.location.href = "#experience";
      if (skillsIsVisible) document.location.href = "#skills";
      if (projectsIsVisible) document.location.href = "#projects";
    }
  }, [
    aboutIsVisible,
    experienceIsVisible,
    heroIsVisible,
    projectsIsVisible,
    router,
    skillsIsVisible,
  ]);

  return (
    <>
      <Head>
        <title>Carlos Segura Garc√≠a | Front-end developer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logos/favicon.ico" />
      </Head>
      <section>
        <motion.img
          src="/noise.png"
          className="fixed -top-50 -left-50 w-screen h-full object-cover mix-blend-soft-light"
          initial={{
            y: 0,
            x: 0,
            opacity: 0.1,
          }}
          animate={{
            y: [-50, -10, 50, 10, -10, 40, -10, 0, -40, -30],
            x: [0, -50, -10, -60, 0, 10, -50, -100, 50, 0, -50],
            opacity: [0.3, 5, 0.4, 0.8, 1, 0.7, 0.5, 1, 0.5],
          }}
          transition={{
            repeat: Infinity,
            duration: 0.08,
          }}
        />
      </section>
      <DefaultLayout>
        <div className="snap-y snap-mandatory h-screen overflow-y-scroll overflow-x-hidden z-0 duration-500">
          {/* Header */}
          <Header />
          {/* Hero */}
          <section
            ref={heroRef}
            id="hero"
            className="h-screen flex flex-col w-auto items-center justify-center relative snap-center overflow-hidden"
          >
            <Hero />
          </section>
          {/* About */}
          <section
            ref={aboutRef}
            id="about"
            className="bg-gradient-to-b from-transparent to-[#0f0d0f] relative snap-center"
          >
            <About />
          </section>
          {/* Experience */}
          <section
            ref={experienceRef}
            id="experience"
            className="bg-gradient-to-b from-[#0f0d0f] to-[#0c0b11] relative snap-center w-screen"
          >
            <Experience />
          </section>
          {/* Skills */}
          <section
            ref={skillsRef}
            id="skills"
            className="bg-gradient-to-b from-[#0c0b11] to-[#110a1a] relative snap-center"
          >
            <Skills />
          </section>
          {/* Projects */}
          <section
            ref={projectsRef}
            id="projects"
            className="bg-gradient-to-b from-[#110a1a] to-transparent relative snap-center"
          >
            <Projects />
          </section>
          {!heroIsVisible && <Jumper />}
        </div>
      </DefaultLayout>
    </>
  );
}
